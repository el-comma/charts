apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "paperless.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "paperless.name" . }}
    helm.sh/chart: {{ include "paperless.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: paperless
spec:
  strategy:
    {{- toYaml .Values.paperless.strategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "paperless.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: paperless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "paperless.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: paperless
    spec:
      containers:
        - name: paperless
          image: {{ include "paperless.image" . }}
          imagePullPolicy: {{ .Values.paperless.image.pullPolicy | quote }}
          env:
            {{- include "paperless.env" . | nindent 12 }}
          ports:
          - name: paperless
            containerPort: {{ .Values.paperless.containerPort }}
            protocol: TCP
          {{- with .Values.paperless.livenessProbe }}
          {{- if .enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: paperless
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- end }}
          {{- with .Values.paperless.readinessProbe }}
          {{- if .enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: paperless
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- end }}
          {{- with .Values.paperless.startupProbe }}
          {{- if .enabled }}
          startupProbe:
            httpGet:
              path: /
              port: paperless
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.paperless.resources | nindent 12 }}
          {{- with .Values.paperless.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /usr/src/paperless/data
              name: paperless-data
            - mountPath: /usr/src/paperless/media
              name: paperless-media
            - mountPath: /usr/src/paperless/export
              name: paperless-export
            - mountPath: /usr/src/paperless/consume
              name: paperless-consume
      volumes:
        - name: paperless-consume
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.consume.existingClaim }}{{ .Values.persistence.consume.existingClaim }}{{- else }}{{ template "paperless.fullname" . }}-consume{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: paperless-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.data.existingClaim }}{{ .Values.persistence.data.existingClaim }}{{- else }}{{ template "paperless.fullname" . }}-data{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: paperless-export
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.export.existingClaim }}{{ .Values.persistence.export.existingClaim }}{{- else }}{{ template "paperless.fullname" . }}-export{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: paperless-media
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.media.existingClaim }}{{ .Values.persistence.media.existingClaim }}{{- else }}{{ template "paperless.fullname" . }}-media{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}